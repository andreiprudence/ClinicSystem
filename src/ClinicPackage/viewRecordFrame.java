/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ClinicPackage;

import java.awt.print.PrinterException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import org.eclipse.persistence.sessions.Record;

/**
 *
 * @author andre
 */
public class viewRecordFrame extends javax.swing.JFrame {

    PreparedStatement pst;
    ResultSet rs;
    Connection con;

    /**
     * Creates new form viewRecordFrame
     */
    public viewRecordFrame() {
        initComponents();
        fetch();
        // CODE THAT MAKES THE CELLS UNEDITABLE
        patient_table.setDefaultEditor(Object.class, null);
    }

    // FETCHES THE DATABASE DATA TO TABLE
    public void fetch() {
        Connection con;

        DatabaseConnection connection = new DatabaseConnection();
        con = connection.getConnection();
        try {
            String query = "select * from patient_info";
            PreparedStatement pstmt = con.prepareStatement(query);
            ResultSet rs = pstmt.executeQuery();
            patient_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(deletePatientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        patient_table = new rojerusan.RSTableMetro();
        searchField = new app.bolivia.swing.JCTextField();
        jLabel20 = new javax.swing.JLabel();
        refreshButton = new rojerusan.RSButtonIconD();
        buttonExport = new rojerusan.RSButtonIconD();
        buttonPrint = new rojerusan.RSButtonIconD();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View Patient Record");
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(38, 133, 187), 3));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(38, 133, 187));
        jLabel31.setText("VIEW PATIENT RECORD");
        jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, -1, -1));

        jPanel14.setBackground(new java.awt.Color(255, 179, 68));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 960, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 960, 3));

        patient_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient ID", "Title 2", "Title 3", "Title 4"
            }
        ));
        patient_table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        patient_table.setColorBackgoundHead(new java.awt.Color(38, 133, 187));
        patient_table.setColorBordeFilas(new java.awt.Color(38, 133, 187));
        patient_table.setColorBordeHead(new java.awt.Color(38, 133, 187));
        patient_table.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        patient_table.setRowHeight(20);
        patient_table.setRowMargin(2);
        patient_table.getTableHeader().setResizingAllowed(false);
        patient_table.getTableHeader().setReorderingAllowed(false);
        patient_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patient_tableMouseClicked(evt);
            }
        });
        patient_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patient_tableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(patient_table);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 1230, 330));

        searchField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(38, 133, 187)));
        searchField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        searchField.setOpaque(false);
        searchField.setPlaceholder("Enter Last Name");
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        jPanel1.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 72, 320, 40));

        jLabel20.setBackground(new java.awt.Color(255, 0, 0));
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClinicPackage/images/closeicon.png"))); // NOI18N
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.setOpaque(true);
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 0, 40, 40));

        refreshButton.setBackground(new java.awt.Color(38, 133, 187));
        refreshButton.setBorder(null);
        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClinicPackage/images/refresh_32px.png"))); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        jPanel1.add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, 110, 40));

        buttonExport.setBackground(new java.awt.Color(38, 133, 187));
        buttonExport.setBorder(null);
        buttonExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClinicPackage/images/export_csv_32px.png"))); // NOI18N
        buttonExport.setText("Export to");
        buttonExport.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        buttonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportActionPerformed(evt);
            }
        });
        jPanel1.add(buttonExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 70, 110, 40));

        buttonPrint.setBackground(new java.awt.Color(38, 133, 187));
        buttonPrint.setBorder(null);
        buttonPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClinicPackage/images/print_32px.png"))); // NOI18N
        buttonPrint.setText("Print table");
        buttonPrint.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });
        jPanel1.add(buttonPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 70, 120, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        //search function
        DatabaseConnection connection = new DatabaseConnection();
        con = connection.getConnection();

        String search = searchField.getText();

        String query = "select * from patient_info where patient_ID= " + search;
        String query2 = "select * from patient_info where patient_lastname like '%" + search + "%'";
        //String query3 = "select * from patient_info where patient_firstname like '%" + search + "%'";
        try {
            if (search.matches("^[0-9]+$")) {

                pst = con.prepareStatement(query);
                rs = pst.executeQuery();
                patient_table.setModel(DbUtils.resultSetToTableModel(rs));

            } else {

                pst = con.prepareStatement(query2);
                rs = pst.executeQuery();
                patient_table.setModel(DbUtils.resultSetToTableModel(rs));
            }
        } catch (SQLException ex) {
            Logger.getLogger(InternalFramePatientRec.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                rs.close();
            } catch (Exception e) {
                /* Ignored */ }
            try {
                pst.close();
            } catch (Exception e) {
                /* Ignored */ }
            try {
                con.close();
            } catch (Exception e) {
                /* Ignored */ }
        }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void patient_tableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patient_tableKeyReleased
        //instantiating database connection
        Connection con;
        DatabaseConnection connection = new DatabaseConnection();
        con = connection.getConnection();

        int row = patient_table.getSelectedRow();
        String selection = patient_table.getModel().getValueAt(row, 0).toString();
        String query = "select * from patient_info where patient_ID = " + selection;
        DefaultTableModel d1 = (DefaultTableModel) patient_table.getModel();

        try {
            PreparedStatement pst = con.prepareStatement(query);
            ResultSet rs = pst.executeQuery();

        } catch (SQLException ex) {
            Logger.getLogger(deletePatientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_patient_tableKeyReleased

    private void patient_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patient_tableMouseClicked
        DefaultTableModel model = (DefaultTableModel) patient_table.getModel();
        int selectedRow = patient_table.getSelectedRow();

        String id, lastName, firstName, gender, birthDate, age, PhoneNo, address, motherLastName, motherFirstName, motherAge, motherPhoneNo, fatherLastName, fatherFirstName, fatherAge, fatherPhoneNo, remarks, prescription, dateAdded;

        id = model.getValueAt(selectedRow, 0).toString();
        lastName = model.getValueAt(selectedRow, 1).toString();
        firstName = model.getValueAt(selectedRow, 2).toString();
        gender = model.getValueAt(selectedRow, 3).toString();
        birthDate = model.getValueAt(selectedRow, 4).toString();
        age = model.getValueAt(selectedRow, 5).toString();
        PhoneNo = model.getValueAt(selectedRow, 6).toString();
        address = model.getValueAt(selectedRow, 7).toString();
        motherLastName = model.getValueAt(selectedRow, 8).toString();
        motherFirstName = model.getValueAt(selectedRow, 9).toString();
        motherAge = model.getValueAt(selectedRow, 10).toString();
        motherPhoneNo = model.getValueAt(selectedRow, 11).toString();
        fatherLastName = model.getValueAt(selectedRow, 12).toString();
        fatherFirstName = model.getValueAt(selectedRow, 13).toString();
        fatherAge = model.getValueAt(selectedRow, 14).toString();
        fatherPhoneNo = model.getValueAt(selectedRow, 15).toString();
        remarks = model.getValueAt(selectedRow, 16).toString();
        prescription = model.getValueAt(selectedRow, 17).toString();
        dateAdded = model.getValueAt(selectedRow, 18).toString();

        displayDataToFrame dataToFrame = new displayDataToFrame();
        dataToFrame.GetInfo(id, lastName, firstName, gender, birthDate, age, PhoneNo, address, motherLastName, motherFirstName, motherAge, motherPhoneNo, fatherLastName, fatherFirstName, fatherAge, fatherPhoneNo, remarks, prescription, dateAdded);
        dataToFrame.setVisible(true);
    }//GEN-LAST:event_patient_tableMouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        // Terminate JVM
        this.dispose();
    }//GEN-LAST:event_jLabel20MouseClicked

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        fetch();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void buttonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportActionPerformed
       JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select file location");
        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            //lets write to file

            try {
                FileWriter fw = new FileWriter(fileToSave);
                BufferedWriter bw = new BufferedWriter(fw);
                for (int i = 0; i < patient_table.getRowCount();
                i++

                    ) {
                    for (int j = 0; j < patient_table.getColumnCount();
                    j++

                        ) {
                        //write
                        bw.write(patient_table.getValueAt(i, j).toString() + ",");
                    }
                    bw.newLine();//record per line
                }
                JOptionPane.showMessageDialog(this, "File created", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                bw.close();
                fw.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "ERROR", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_buttonExportActionPerformed

    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed
     try {
            MessageFormat header = new MessageFormat("C.A.R.E.S Clinic and Laboratory - La Union");
            MessageFormat footer = new MessageFormat("C.A.R.E.S Clinic and Laboratory - La Union");
//
//        try {
//            patient_table.print(JTable.PrintMode.NORMAL, header, footer);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, e);
//        }

            patient_table.print(JTable.PrintMode.NORMAL, null, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(viewRecordFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewRecordFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewRecordFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewRecordFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewRecordFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewRecordFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSButtonIconD buttonExport;
    private rojerusan.RSButtonIconD buttonPrint;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JScrollPane jScrollPane3;
    private rojerusan.RSTableMetro patient_table;
    private rojerusan.RSButtonIconD refreshButton;
    private app.bolivia.swing.JCTextField searchField;
    // End of variables declaration//GEN-END:variables
}
