/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ClinicPackage;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import net.proteanit.sql.DbUtils;
import org.eclipse.persistence.jpa.jpql.parser.DateTime;

/**
 *
 * @author andre
 */
public class InternalFramePatientRec extends javax.swing.JInternalFrame {

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    Statement st;

    /**
     * Creates new form InternalFramePatientRec
     */
    public InternalFramePatientRec() {
        initComponents();
        InternalFrameBorder();
        getlastID();
        /*   this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
            ui.setNorthPane(null);
            pack();
         */
    }

    public void getlastID() {
        try {
            int lastid;
            DatabaseConnection connection = new DatabaseConnection();
            con = connection.getConnection();
            String query = "select max(patient_ID) from patient_info";
            st = con.createStatement();
            rs = st.executeQuery(query);
            if (rs.next()) {
                lastid = rs.getInt(1);
                lastid++;
                label_patientID.setText(Integer.toString(lastid));
            }
        } catch (SQLException ex) {
            Logger.getLogger(InternalFramePatientRec.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // This method removes the border of the InternalFrame
    void InternalFrameBorder() {
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAddRec = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        textLastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFirstName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        textPhoneNo = new javax.swing.JTextField();
        textAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        birthDate = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        comboGender = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaRemarks = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        textFatherLName = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        textFatherFName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        textFatherNumber = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        textFatherAge = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        textMotherLName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        textMotherFName = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        textMotherNumber = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        textMotherAge = new javax.swing.JTextField();
        textAge = new javax.swing.JTextField();
        btnCalculateAge = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        label_patientID = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaPrescription = new javax.swing.JTextArea();

        setPreferredSize(new java.awt.Dimension(1070, 620));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1060, 620));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(61, 86, 178));
        jLabel1.setText("Patient Information");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        btnAddRec.setBackground(new java.awt.Color(0, 166, 89));
        btnAddRec.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnAddRec.setForeground(new java.awt.Color(255, 255, 255));
        btnAddRec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClinicPackage/images/3336950_download_save_icon.png"))); // NOI18N
        btnAddRec.setText("Save");
        btnAddRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRecActionPerformed(evt);
            }
        });
        jPanel2.add(btnAddRec, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 560, 120, 50));

        btnBack.setFont(new java.awt.Font("Gadugi", 1, 11)); // NOI18N
        btnBack.setText("X");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel2.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 10, 50, 30));

        btnCancel.setBackground(new java.awt.Color(255, 0, 51));
        btnCancel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClinicPackage/images/330399_bad_cancel_clear_close_decline_icon.png"))); // NOI18N
        btnCancel.setText("Clear");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 560, 120, 50));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 790, 2));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Basic Information", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(61, 86, 178))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(61, 86, 178));
        jLabel8.setText("Patient ID:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 30));

        textLastName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.add(textLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 350, 25));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(61, 86, 178));
        jLabel3.setText("Last Name");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(61, 86, 178));
        jLabel4.setText("First Name");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, -1, -1));

        textFirstName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.add(textFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 400, 25));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(61, 86, 178));
        jLabel9.setText("Phone Number");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 130, 120, 20));

        textPhoneNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        textPhoneNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textPhoneNoKeyTyped(evt);
            }
        });
        jPanel3.add(textPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, 240, 25));

        textAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.add(textAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 215, 770, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(61, 86, 178));
        jLabel5.setText("Address");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(61, 86, 178));
        jLabel7.setText("Date of Birth");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, -1, 20));

        birthDate.setDateFormatString("dd/MM/yyyy");
        birthDate.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                birthDateAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        birthDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                birthDateMouseClicked(evt);
            }
        });
        birthDate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                birthDateInputMethodTextChanged(evt);
            }
        });
        birthDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                birthDatePropertyChange(evt);
            }
        });
        jPanel3.add(birthDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 250, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(61, 86, 178));
        jLabel11.setText("Gender:");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 20));

        comboGender.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel3.add(comboGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 90, 25));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(61, 86, 178));
        jLabel6.setText("Remarks:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, -1));

        textAreaRemarks.setColumns(20);
        textAreaRemarks.setRows(5);
        textAreaRemarks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(textAreaRemarks);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 500, 70));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Father's Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(61, 86, 178))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(61, 86, 178));
        jLabel13.setText("Last Name");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 30));
        jPanel4.add(textFatherLName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 130, 30));

        jLabel14.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(61, 86, 178));
        jLabel14.setText("First Name");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 70, 30));
        jPanel4.add(textFatherFName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 160, 30));

        jLabel15.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(61, 86, 178));
        jLabel15.setText("Phone Number");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 78, -1, 20));

        textFatherNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFatherNumberKeyTyped(evt);
            }
        });
        jPanel4.add(textFatherNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 260, 30));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(61, 86, 178));
        jLabel22.setText("Age");
        jPanel4.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 30));

        textFatherAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFatherAgeKeyTyped(evt);
            }
        });
        jPanel4.add(textFatherAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 50, 30));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, 500, 120));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mother's Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(61, 86, 178))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(61, 86, 178));
        jLabel17.setText("Last Name");
        jPanel5.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 30));
        jPanel5.add(textMotherLName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 130, 30));

        jLabel18.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(61, 86, 178));
        jLabel18.setText("First Name");
        jPanel5.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 70, 30));
        jPanel5.add(textMotherFName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 160, 30));

        jLabel19.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(61, 86, 178));
        jLabel19.setText("Phone Number");
        jPanel5.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 78, -1, 20));

        textMotherNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textMotherNumberKeyTyped(evt);
            }
        });
        jPanel5.add(textMotherNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 240, 30));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(61, 86, 178));
        jLabel21.setText("Age");
        jPanel5.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 30));

        textMotherAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textMotherAgeKeyTyped(evt);
            }
        });
        jPanel5.add(textMotherAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 50, 30));

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 500, 120));

        textAge.setEditable(false);
        textAge.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        textAge.setEnabled(false);
        jPanel3.add(textAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 160, 40, 25));

        btnCalculateAge.setText("Get Age");
        btnCalculateAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateAgeActionPerformed(evt);
            }
        });
        jPanel3.add(btnCalculateAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, 80, -1));

        jLabel16.setFont(new java.awt.Font("Dialog", 2, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 51, 51));
        jLabel16.setText("*from date of Birth");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, -1, -1));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(61, 86, 178));
        jLabel20.setText("Age");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, -1, -1));

        label_patientID.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        label_patientID.setForeground(new java.awt.Color(0, 255, 0));
        label_patientID.setText("3");
        jPanel3.add(label_patientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(61, 86, 178));
        jLabel10.setText("Prescription:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, -1, -1));

        textAreaPrescription.setColumns(20);
        textAreaPrescription.setRows(5);
        textAreaPrescription.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane2.setViewportView(textAreaPrescription);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, 500, 70));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1030, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int msg = JOptionPane.showConfirmDialog(null, "Are you sure you want to clear all the records?");

        if (msg == 0) {
            // textIDNo.setText("");
            textLastName.setText("");
            textFirstName.setText("");
            textAddress.setText("");
            textAreaRemarks.setText("");
            birthDate.setCalendar(null);
            textPhoneNo.setText("");
            textAge.setText("");
        }

    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();

    }//GEN-LAST:event_btnBackActionPerformed

    private void birthDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_birthDateMouseClicked


    }//GEN-LAST:event_birthDateMouseClicked

    private void btnCalculateAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateAgeActionPerformed
        // Takes the string value of the jDateChooser
        String dateofBirth = ((JTextField) birthDate.getDateEditor().getUiComponent()).getText();

        //Splits the date into an array
        String dob[] = dateofBirth.split("/");

        // Elements in the declared array
        int day = Integer.parseInt(dob[0]);
        int month = Integer.parseInt(dob[1]);
        int year = Integer.parseInt(dob[2]);

        // Storing the localdates
        LocalDate selectedDate = LocalDate.of(year, month, day);
        LocalDate currentDate = LocalDate.now();

        // Validating to rewrite textfield if not empty
        if (textAge.getText() != "") {
            textAge.setText("");
            //Outputting the date
            int ResultYear = Period.between(selectedDate, currentDate).getYears();
            textAge.setText("" + ResultYear);
        } else if (textAge.getText() == "") {
            textAge.setText("");
        }
    }//GEN-LAST:event_btnCalculateAgeActionPerformed

    private void birthDateAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_birthDateAncestorAdded

    }//GEN-LAST:event_birthDateAncestorAdded

    private void birthDateInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_birthDateInputMethodTextChanged

    }//GEN-LAST:event_birthDateInputMethodTextChanged

    private void birthDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_birthDatePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_birthDatePropertyChange

    private void btnAddRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRecActionPerformed
        Connection con;

        DatabaseConnection connection = new DatabaseConnection();
        con = connection.getConnection();
        String query = "insert into patient_info(patient_id, patient_lastname, patient_firstname, patient_gender, patient_DOB, patient_age, patient_contactno, patient_address, mother_lastname, mother_firstname, mother_age, mother_contactno, father_lastname, father_firstname, father_age, father_contactno, remarks, prescription) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        int msg = JOptionPane.showConfirmDialog(this, "Save the record?");

        if (msg == JOptionPane.YES_OPTION) {
            try {
                PreparedStatement pstmt = con.prepareStatement(query);
                pstmt.setString(1, label_patientID.getText());
                pstmt.setString(2, textLastName.getText());
                pstmt.setString(3, textFirstName.getText());
                pstmt.setString(4, comboGender.getSelectedItem().toString());
                //date conversion
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
                String d = sdf.format(birthDate.getDate());
                pstmt.setString(5, d);
                //end of date conversion
                pstmt.setString(6, textAge.getText());
                pstmt.setString(7, textPhoneNo.getText());
                pstmt.setString(8, textAddress.getText());
                pstmt.setString(9, textMotherLName.getText());
                pstmt.setString(10, textMotherFName.getText());
                pstmt.setString(11, textMotherAge.getText());
                pstmt.setString(12, textMotherNumber.getText());
                pstmt.setString(13, textFatherLName.getText());
                pstmt.setString(14, textFatherFName.getText());
                pstmt.setString(15, textFatherAge.getText());
                pstmt.setString(16, textFatherNumber.getText());
                pstmt.setString(17, textAreaRemarks.getText());
                pstmt.setString(18, textAreaPrescription.getText());

                int success = pstmt.executeUpdate();

                if (success == 1) {
                    JOptionPane.showMessageDialog(this, "Record Saved!");

//                     Clearing the textfields after saving the record
                    textLastName.setText("");
                    textFirstName.setText("");
                    birthDate.setCalendar(null);
                    textAge.setText("");
                    textPhoneNo.setText("");
                    textAddress.setText("");
                    textMotherLName.setText("");
                    textMotherFName.setText("");
                    textMotherAge.setText("");
                    textMotherNumber.setText("");
                    textFatherLName.setText("");
                    textFatherFName.setText("");
                    textFatherAge.setText("");
                    textFatherNumber.setText("");
                    textAreaRemarks.setText("");
                    textAreaPrescription.setText("");
                    getlastID();
                } else {
                    JOptionPane.showMessageDialog(this, "Record failed to save");
                }

            } catch (SQLException ex) {
                Logger.getLogger(InternalFramePatientRec.class.getName()).log(Level.SEVERE, null, ex);

                // closing the connection
            } finally {
                try {
                    rs.close();
                } catch (Exception e) {
                    /* Ignored */ }
                try {
                    pst.close();
                } catch (Exception e) {
                    /* Ignored */ }
                try {
                    con.close();
                } catch (Exception e) {
                    /* Ignored */ }
            }

        }
    }//GEN-LAST:event_btnAddRecActionPerformed

    private void textPhoneNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPhoneNoKeyTyped
        // input validation that only accepts integer input
        char c = evt.getKeyChar();

        int length = textPhoneNo.getText().length();

        if (!Character.isDigit(c)) {
            //getToolkit().beep();
            evt.consume();
            if (c == KeyEvent.VK_DELETE) {
                evt.consume();
            } else if (c == KeyEvent.VK_BACK_SPACE) {
                evt.consume();
            } else {
                JOptionPane.showMessageDialog(this, "You can only input numbers in this field");
            }
        }
    }//GEN-LAST:event_textPhoneNoKeyTyped

    private void textMotherAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textMotherAgeKeyTyped
        // input validation that only accepts integer input
        char c = evt.getKeyChar();

        int length = textPhoneNo.getText().length();

        if (!Character.isDigit(c)) {
            //getToolkit().beep();
            evt.consume();
            if (c == KeyEvent.VK_DELETE) {
                evt.consume();
            } else if (c == KeyEvent.VK_BACK_SPACE) {
                evt.consume();
            } else {
                JOptionPane.showMessageDialog(this, "You can only input numbers in this field");
            }
        }
    }//GEN-LAST:event_textMotherAgeKeyTyped

    private void textMotherNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textMotherNumberKeyTyped
        // input validation that only accepts integer input
        char c = evt.getKeyChar();

        int length = textPhoneNo.getText().length();

        if (!Character.isDigit(c)) {
            //getToolkit().beep();
            evt.consume();
            if (c == KeyEvent.VK_DELETE) {
                evt.consume();
            } else if (c == KeyEvent.VK_BACK_SPACE) {
                evt.consume();
            } else {
                JOptionPane.showMessageDialog(this, "You can only input numbers in this field");
            }
        }
    }//GEN-LAST:event_textMotherNumberKeyTyped

    private void textFatherAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFatherAgeKeyTyped
        // input validation that only accepts integer input
        char c = evt.getKeyChar();

        int length = textPhoneNo.getText().length();

        if (!Character.isDigit(c)) {
            //getToolkit().beep();
            evt.consume();
            if (c == KeyEvent.VK_DELETE) {
                evt.consume();
            } else if (c == KeyEvent.VK_BACK_SPACE) {
                evt.consume();
            } else {
                JOptionPane.showMessageDialog(this, "You can only input numbers in this field");
            }
        }
    }//GEN-LAST:event_textFatherAgeKeyTyped

    private void textFatherNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFatherNumberKeyTyped
        // input validation that only accepts integer input
        char c = evt.getKeyChar();

        int length = textPhoneNo.getText().length();

        if (!Character.isDigit(c)) {
            //getToolkit().beep();
            evt.consume();
            if (c == KeyEvent.VK_DELETE) {
                evt.consume();
            } else if (c == KeyEvent.VK_BACK_SPACE) {
                evt.consume();
            } else {
                JOptionPane.showMessageDialog(this, "You can only input numbers in this field");
            }
        }
    }//GEN-LAST:event_textFatherNumberKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser birthDate;
    private javax.swing.JButton btnAddRec;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCalculateAge;
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_patientID;
    private javax.swing.JTextField textAddress;
    private javax.swing.JTextField textAge;
    private javax.swing.JTextArea textAreaPrescription;
    private javax.swing.JTextArea textAreaRemarks;
    private javax.swing.JTextField textFatherAge;
    private javax.swing.JTextField textFatherFName;
    private javax.swing.JTextField textFatherLName;
    private javax.swing.JTextField textFatherNumber;
    private javax.swing.JTextField textFirstName;
    private javax.swing.JTextField textLastName;
    private javax.swing.JTextField textMotherAge;
    private javax.swing.JTextField textMotherFName;
    private javax.swing.JTextField textMotherLName;
    private javax.swing.JTextField textMotherNumber;
    private javax.swing.JTextField textPhoneNo;
    // End of variables declaration//GEN-END:variables
}
