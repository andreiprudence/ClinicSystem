/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ClinicPackage;

import java.awt.print.PrinterException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import org.eclipse.persistence.sessions.Record;

/**
 *
 * @author andre
 */
public class viewUserList extends javax.swing.JFrame {

    PreparedStatement pst;
    ResultSet rs;
    Connection con;

    /**
     * Creates new form viewRecordFrame
     */
    public viewUserList() {
        initComponents();
        fetch();
        // CODE THAT MAKES THE CELLS UNEDITABLE
        user_table.setDefaultEditor(Object.class, null);
    }

    // FETCHES THE DATABASE DATA TO TABLE
    public void fetch() {
        Connection con;

        DatabaseConnection connection = new DatabaseConnection();
        con = connection.getConnection();
        try {
            String query = "select user_ID as 'ID', last_name as 'Last Name',first_name as 'First Name', username as 'Username', birth_date as 'Birth Date', age as 'Age', contact_number as 'Phone Number', role as 'Role', address as 'Address',password as 'Password' from user_info";
            PreparedStatement pstmt = con.prepareStatement(query);
            ResultSet rs = pstmt.executeQuery();
            user_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(deletePatientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        searchField = new app.bolivia.swing.JCTextField();
        rSMaterialButtonRectangle2 = new rojerusan.RSMaterialButtonRectangle();
        buttonExport2 = new javax.swing.JButton();
        buttonPrint = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        user_table = new rojerusan.RSTableMetro();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View Patient Record");
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 78, 103));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("View User List");
        jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, -1, -1));

        jPanel14.setBackground(new java.awt.Color(255, 179, 68));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 960, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 960, 5));

        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, 60, 30));

        searchField.setPlaceholder("Enter ID/Last Name");
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        jPanel1.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 240, 40));

        rSMaterialButtonRectangle2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClinicPackage/images/1086667_deals_examine_form_list_records_icon.png"))); // NOI18N
        rSMaterialButtonRectangle2.setText("Refresh");
        rSMaterialButtonRectangle2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSMaterialButtonRectangle2ActionPerformed(evt);
            }
        });
        jPanel1.add(rSMaterialButtonRectangle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 100, 40));

        buttonExport2.setText("Export to .csv");
        buttonExport2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExport2ActionPerformed(evt);
            }
        });
        jPanel1.add(buttonExport2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, -1, 30));

        buttonPrint.setText("Print table");
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });
        jPanel1.add(buttonPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 90, -1, 30));

        user_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "Last Name", "First Name", "Username", "Date of Birth", "Age", "Contact Number", "Role", "Address"
            }
        ));
        user_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(user_table);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 1230, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        //search function
        DatabaseConnection connection = new DatabaseConnection();
        con = connection.getConnection();

        //        int row = patient_table.getSelectedRow();
        //        DefaultTableModel model = (DefaultTableModel) patient_table.getModel();
        //        String id = (String) model.getValueAt(row, 0);
        //   String query = "select * from patient_info where patient_ID = '" + id + "'";
        String search = searchField.getText().toString();

        String query = "select user_ID as 'ID', last_name as 'Last Name',first_name as 'First Name', username as 'Username', birth_date as 'Birth Date', age as 'Age', contact_number as 'Phone Number', role as 'Role', address as 'Address',password as 'Password' from user_info where user_ID= " + search;
        String query2 = "select user_ID as 'ID', last_name as 'Last Name',first_name as 'First Name', username as 'Username', birth_date as 'Birth Date', age as 'Age', contact_number as 'Phone Number', role as 'Role', address as 'Address',password as 'Password' from user_info where last_name like '%" + search + "%'";

        //String query3 = "select * from patient_info where patient_firstname like '%" + search + "%'";
        try {
            if (search.matches("CS")) {
                //            if (search.matches("^[0-9]+$")) {

                    pst = con.prepareStatement(query);
                    rs = pst.executeQuery();
                    user_table.setModel(DbUtils.resultSetToTableModel(rs));

                } else {

                    pst = con.prepareStatement(query2);
                    rs = pst.executeQuery();
                    user_table.setModel(DbUtils.resultSetToTableModel(rs));
                }
                //
                //            String query4 = "select * from user_info where last_name=?";
                //            pst = con.prepareStatement(query4);
                //            pst.setString(1, searchField.getText());
                //            rs = pst.executeQuery();
                //            user_table.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException ex) {
                Logger.getLogger(InternalFramePatientRec.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    rs.close();
                } catch (Exception e) {
                    /* Ignored */ }
                try {
                    pst.close();
                } catch (Exception e) {
                    /* Ignored */ }
                try {
                    con.close();
                } catch (Exception e) {
                    /* Ignored */ }
            }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void rSMaterialButtonRectangle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSMaterialButtonRectangle2ActionPerformed
        fetch();
    }//GEN-LAST:event_rSMaterialButtonRectangle2ActionPerformed

    private void buttonExport2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExport2ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select file location");
        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            //lets write to file

            try {
                FileWriter fw = new FileWriter(fileToSave);
                BufferedWriter bw = new BufferedWriter(fw);
                for (int i = 0; i < user_table.getRowCount();
                    i++) {
                    for (int j = 0; j < user_table.getColumnCount();
                        j++) {
                        //write
                        bw.write(user_table.getValueAt(i, j).toString() + ",");
                    }
                    bw.newLine();//record per line
                }
                JOptionPane.showMessageDialog(this, "File created successfully", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                bw.close();
                fw.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "ERROR", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_buttonExport2ActionPerformed

    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed
        try {
            MessageFormat header = new MessageFormat("C.A.R.E.S Clinic and Laboratory - La Union");
            MessageFormat footer = new MessageFormat("C.A.R.E.S Clinic and Laboratory - La Union");
            //
            //        try {
                //            patient_table.print(JTable.PrintMode.NORMAL, header, footer);
                //        } catch (Exception e) {
                //            JOptionPane.showMessageDialog(this, e);
                //        }

            user_table.print(JTable.PrintMode.NORMAL, null, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(viewRecordFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonPrintActionPerformed

    private void user_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_tableMouseClicked
        DefaultTableModel model = (DefaultTableModel) user_table.getModel();
        int selectedRow = user_table.getSelectedRow();

        String id, lastName, firstName, userName, birthDate, age, PhoneNo, role, address, password;

        id = model.getValueAt(selectedRow, 0).toString();
        lastName = model.getValueAt(selectedRow, 1).toString();
        firstName = model.getValueAt(selectedRow, 2).toString();
        userName = model.getValueAt(selectedRow, 3).toString();
        birthDate = model.getValueAt(selectedRow, 4).toString();
        age = model.getValueAt(selectedRow, 5).toString();
        PhoneNo = model.getValueAt(selectedRow, 6).toString();
        role = model.getValueAt(selectedRow, 7).toString();
        address = model.getValueAt(selectedRow, 8).toString();
        password = model.getValueAt(selectedRow, 9).toString();

        displayDataToFrameforUserList dataToFrame = new displayDataToFrameforUserList();
        dataToFrame.GetInfo(id, lastName, firstName, userName, birthDate, age, PhoneNo, role, address, password);
        dataToFrame.setVisible(true);
    }//GEN-LAST:event_user_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewUserList.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewUserList.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewUserList.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewUserList.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewUserList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonExport2;
    private javax.swing.JButton buttonPrint;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JScrollPane jScrollPane2;
    private rojerusan.RSMaterialButtonRectangle rSMaterialButtonRectangle2;
    private app.bolivia.swing.JCTextField searchField;
    private rojerusan.RSTableMetro user_table;
    // End of variables declaration//GEN-END:variables
}
